<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sZombie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_angle = random(360)
image_angle-=90
image_speed=0.1
rnd=0
alarm[0]=15
hp=5
dead=1
//key -1= corpse 0=chase, 1=rest/watch 2=threaten

walk=0
rec=1
gait=0
careful=0


//vision code
myeye = instance_create(x,y,oVisionc);  //create vision cone object and keep the isntance id stored in variable myeye
myeye.image_angle = image_angle;  //set vision object to the same image angle as self
direction=image_angle
myeye.direction=image_angle
//place to return
orgx=x
orgy=y

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//recoil from being shot
if dead=0
{speed+=5

rec=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//timer to go back to wild chase after being away from any walls
careful=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//the random varience in direction while chasing
if dead=0
{
rnd=random_range(-30,30)
//sound_play(so_zshuffel)
//walk=audio_play_sound(so_zshuffel,10,false)
alarm[0]=120
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead=1
{
//if orgx&lt;=x+20 and orgx&gt;=x-20  and orgy&lt;=y+20 and orgy&gt;=y-20{} else {mp_potential_step(orgx,orgy,1,1)}
//rotate to face nearest instance found (can change this code to following if you wish by changing the mp_potential arguments) 
//and set vision object's coords and angle to the same as self
if (myeye.found)
{
  mp_potential_step(myeye.near_inst.x,myeye.near_inst.y,0,false);
  mp_potential_settings(10,0,0,true);
  image_angle = direction;
  myeye.x = x;
  myeye.y = y;
  myeye.image_angle = image_angle;
}
}


if dead&gt;0 //checks distance and threatens/attacks
{

if myeye.near_dist&lt;150 dead=2 else dead=1
if myeye.near_dist&lt;50 dead=0
}

if dead=2
{
image_yscale=1+random_range(-0.1,0.1)
image_xscale=1+random_range(-0.1,0.1)
if (myeye.found)
    {
      mp_potential_step(myeye.near_inst.x,myeye.near_inst.y,0,false);
      mp_potential_settings(10,0,0,true);
      image_angle = direction;
      myeye.x = x;
      myeye.y = y;
      myeye.image_angle = image_angle;
    }
}


if dead=0 //relaxes after losing track of beast
{
//if myeye.near_dist&gt;200 {dead=1} 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_angle=direction-90
  myeye.x = x;
  myeye.y = y;
  myeye.image_angle = image_angle;

if dead=0 
{image_angle = direction;
//if place_meeting(x,y,oEnemy) or oPlayer.jumped=1 {if careful=0 direction+=random_range(10,-10) exit} this was designed to have it vear off in a random direction if the player jumped or bumped another enemy

if instance_exists(oPlayer)
{
if !collision_circle(x,y,32,oBlock,false,true) //!place_meeting(x,y,oBlock) 
 {if careful=0
    { //this is probably what makes the zombie do dumb circles
    if direction&gt;point_direction(x,y,oPlayer.x,oPlayer.y)+rnd {direction-=5}
    if direction&lt;point_direction(x,y,oPlayer.x,oPlayer.y)+rnd {direction+=5}
    if rec=1  {speed=random_range(1,4)} else {} 
    }
 } else  
  {careful=1 alarm[2]=15} 
} 
if careful=1 {mp_potential_step_object(oPlayer.x,oPlayer.y,0.5,oBlock)}     
}

if hp&lt;=0 and dead&gt;-1
{dead=-1  oGame.score+=1 speed=0 audio_stop_sound(walk) audio_play_sound(so_zmoan,50,false) image_speed=0.05 image_index=0 sprite_index=sZombdead}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
x=xprevious
y=yprevious
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWall">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemy">
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead=1 image_speed=0 image_index=2
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
